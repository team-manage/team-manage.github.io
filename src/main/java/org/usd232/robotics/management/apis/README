All of these sources were generated using a script.  The script is as follows:
for file in $(find -name "*.java"); do class=$(echo "$file" | sed -e "s|.*/||g" -e "s|\.java$||"); sed -e "s|\([^*]\)/\([^*]\)|\1[]\2|g" -i $file; sed -e "s|package .*;|&\n\nimport java.io.Serializable;|" -e "s|^public class .*$|& implements Cloneable, Serializable, Comparable<$class>|" -e "s|^{$|{\n    private static final long serialVersionUID = $(od -N 8 -t d8 -An /dev/urandom | tr -d " ")L;|" -e "s|^}$|\n    @Override\n    public $class clone()\n    {\n        return new $class(this);\n    }\n\n    @Override\n    public int hashCode()\n    {\n        final int prime = 31;\n        int result = 1;\n// hashCode        return result;\n    }\n\n    @Override\n    public boolean equals(Object obj)\n    {\n        if (this == obj)\n        {\n            return true;\n        }\n        if (obj == null)\n        {\n            return false;\n        }\n        if (!(obj instanceof $class))\n        {\n            return false;\n        }\n        $class other = ($class) obj;\n// equals        return true;\n   }\n\n    @Override\n    public int compareTo($class o)\n    {\n        return ((Integer) hashCode()).compareTo(o.hashCode());\n    }\n\n    @Override\n    public String toString()\n    {\n        return String.format(\"$class [// toString format]\", // toString params);\n    }\n\n    /**\n     * Nullary constructor\n     *\n     * @since 1.0\n     */\n    public $class()\n    {\n    }\n\n    /**\n     * Default constructor\n     *\n// default ctor docs\n     */\n    public $class(// default ctor params)\n    {\n// default ctor\n\n    /**\n     * Copy constructor\n     *\n     * @param obj\n     *            The object to copy from\n     * @since 1.0\n     */\n    public $class($class obj)\n    {\n        this(// copy ctor);\n    }\n}|" $file | sed -e "s|^// default ctor docs|$(cat "$file" | tr "\n" " " | sed -e "s|/\*\*[^/]*\*/||" -e "s|[^/]*/\*\* *\* *\([^*]*\)[^/]*/ *public *\([A-Za-z0-9<>]*\) *\([A-Za-z0-9<>]*\)[^/]*|     * @param \3\\\\n     *            \1\\\\n|g" | sed -e "s| *$||g")     * @since 1.0|" -e "s|// default ctor params|$(cat "$file" | tr "\n" " " | sed -e "s|/\*\*[^/]*\*/||" -e "s|[^/]*/\*\* *\* *\([^*]*\)[^/]*/ *public *\([A-Za-z0-9<>]*\) *\([A-Za-z0-9<>]*\)[^/]*|\2 \3, |g" | sed -e "s|, $||g")|" -e "s|^// default ctor$|$(cat "$file" | tr "\n" " " | sed -e "s|/\*\*[^/]*\*/||" -e "s|[^/]*/\*\* *\* *\([^*]*\)[^/]*/ *public *\([A-Za-z0-9<>]*\) *\([A-Za-z0-9<>]*\)[^/]*|        this.\3 = \3;\\\\n|g")    }|" -e "s|// copy ctor|$(cat "$file" | tr "\n" " " | sed -e "s|/\*\*[^/]*\*/||" -e "s|[^/]*/\*\* *\* *\([^*]*\)[^/]*/ *public *\([A-Za-z0-9<>]*\) *\([A-Za-z0-9<>]*\)[^/]*|obj.\3, |g" | sed -e "s|, $||g")|" -e "s|^// hashCode|$(cat "$file" | tr "\n" " " | sed -e "s|/\*\*[^/]*\*/||" -e "s|[^/]*/\*\* *\* *\([^*]*\)[^/]*/ *public *\([A-Za-z0-9<>]*\) *\([A-Za-z0-9<>]*\)[^/]*|        result = prime * result + {\2 \3};\\\\n|g" | sed -e "s|{[A-Z][A-Za-z0-9<>]* \([^}]*\)}|((\1 == null) ? 0 : \1.hashCode())|g" -e "s|{int \([^}]*\)}|\1|g" -e "s|{boolean \([^}]*\)}|Boolean.hashCode(\1)|g")|" -e "s|^// equals|$(cat "$file" | tr "\n" " " | sed -e "s|/\*\*[^/]*\*/||" -e "s|[^/]*/\*\* *\* *\([^*]*\)[^/]*/ *public *\([A-Za-z0-9<>]*\) *\([A-Za-z0-9<>]*\)[^/]*|{\2 \3}|g" | sed -e "s|{[A-Z][A-Za-z0-9<>]* \([^}]*\)}|        if (\1 == null)\\\\n        {\\\\n            if (other.\1 != null)\\\\n            {\\\\n                return false;\\\\n            }\\\\n        }\\\\n        else if (\!\1.equals(other.\1))\\\\n        {\\\\n            return false;\\\\n        }\\\\n|g" -e "s|{[a-z][A-Za-z0-9<>]* \([^}]*\)}|        if (\1 != other.\1)\\\\n        {\\\\n            return false;\\\\n        }\\\\n|g")|" -e "s|// toString format|$(cat "$file" | tr "\n" " " | sed -e "s|/\*\*[^/]*\*/||" -e "s|[^/]*/\*\* *\* *\([^*]*\)[^/]*/ *public *\([A-Za-z0-9<>]*\) *\([A-Za-z0-9<>]*\)[^/]*|\3=%s, |g" | sed -e "s|, $||g")|" -e "s|// toString params|$(cat "$file" | tr "\n" " " | sed -e "s|/\*\*[^/]*\*/||" -e "s|[^/]*/\*\* *\* *\([^*]*\)[^/]*/ *public *\([A-Za-z0-9<>]*\) *\([A-Za-z0-9<>]*\)[^/]*|\3, |g" | sed -e "s|, $||g")|" > $file.new; grep enum $file > /dev/null; if [ $? -eq 1 ]; then rm $file; mv $file.new $file; else rm $file.new; fi; sed -e "s|\[\]|/|g" -i $file; done
To look at the inputs for the script, see commit f8e103a2b8e56dfc62ca4e6bb9ae0913a25dad00.
